import pandas as pd

# Load the provided CSV file
file_path = r"C:\Users\tiyasa\PycharmProjects\new_filtered_trades.csv"
df = pd.read_csv(file_path)

# Filter the DataFrame to only include positive profits
positive_profit_df = df[df['profit'] > 0]

# Group by country and sum the profit for each country
country_profit_summation = positive_profit_df.groupby('country_name')['profit'].sum()

# Sort the summed profits in descending order and take the top 10 countries
top_10_countries_profit = country_profit_summation.sort_values(ascending=False).head(10)

# Extract the names of the top 10 countries
top_10_countries = top_10_countries_profit.index.tolist()

# Filter the DataFrame to include only trades from the top 10 countries
top_10_countries_df = positive_profit_df[positive_profit_df['country_name'].isin(top_10_countries)]

# Group by country and session, then sum the profit for each session and take the top 3 sessions per country
top_sessions_by_country = top_10_countries_df.groupby(['country_name', 'Session']).agg(
    total_profit=('profit', 'sum')).reset_index()
top_3_sessions_per_country = top_sessions_by_country.groupby('country_name').apply(
    lambda x: x.nlargest(3, 'total_profit')).reset_index(drop=True)

# Filter the DataFrame to include only the top 3 sessions per country
top_3_sessions_df = top_10_countries_df.merge(top_3_sessions_per_country[['country_name', 'Session']],
                                              on=['country_name', 'Session'])

# Group by country, session, and symbol, then sum the profit for each symbol and take the top 3 symbols per session
top_symbols_by_session = top_3_sessions_df.groupby(['country_name', 'Session', 'symbol']).agg(
    total_profit=('profit', 'sum')).reset_index()
top_3_symbols_per_session = top_symbols_by_session.groupby(['country_name', 'Session']).apply(
    lambda x: x.nlargest(3, 'total_profit')).reset_index(drop=True)

# Now, for each symbol, find the two account types with the highest positive profit
final_lot_selection = []
for (country, session, symbol), group in top_3_symbols_per_session.groupby(['country_name', 'Session', 'symbol']):
    symbol_data = top_3_sessions_df[(top_3_sessions_df['symbol'] == symbol) & (top_3_sessions_df['Session'] == session)]

    # Find the top 2 account types with the highest positive profit for this symbol
    top_2_account_types = symbol_data.groupby('type_account')['profit'].sum().nlargest(2)

    # For each account type, find the top 2 lots with the highest positive profit
    for account_type in top_2_account_types.index:
        account_type_data = symbol_data[symbol_data['type_account'] == account_type]
        top_2_lots = account_type_data.groupby('FinalLot')['profit'].sum().nlargest(2)
        top_lot_profit = top_2_lots.iloc[0]  # Top lot's profit value

        final_lot_selection.append({
            'Country': country,
            'Session': session,
            'Symbol': symbol,
            'Account_Type': account_type,
            'Top_Lots': list(top_2_lots.index),
            'Top_Lots_Profit': list(top_2_lots.values),
            'Top_Lot_Profit': top_lot_profit  # Adding highest positive profit corresponding to the top lot
        })

# Convert final_lot_selection to DataFrame for easier analysis
final_lot_df = pd.DataFrame(final_lot_selection)

# Display the result before saving
print(final_lot_df)

# Save the result to a new CSV file
output_file_path = r"C:\Users\tiyasa\PycharmProjects\3.csv"
final_lot_df.to_csv(output_file_path, index=False)
